{"version":3,"sources":["components/WelcomeTemplate/WelcomeTemplate.js","components/GameTemplate/GameTemplate.js","components/ThankYou/ThankYou.js","components/Driver.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","input","display","WelcomeTemplate","props","classes","Fragment","Button","variant","className","onClick","setScreen","gameDataLevels","Math","floor","random","task","leftAnswer","rightAnswer","color","type","root","padding","card","minWidth","timeSaver","screenSwitcher","counter","setCounter","currentMs","Date","getTime","push","setResultArray","GameTemplate","useState","useEffect","startMs","event","handler","passive","window","addEventListener","removeEventListener","useEvent","keyCode","Paper","Typography","component","style","Card","CardActionArea","CardContent","ThankYou","finalResults","i","resultArray","length","listData","map","element","key","indexOf","Driver","displayedScreen","position","top","left","width","renderComponent","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eaeb05f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\nconst WelcomeTemplate = props => {\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    props.setScreen(`GameTemplate`); // function to change screen\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <p>Welcome to the game!</p>\r\n\r\n      <p>\r\n        You will see two sets of number sequences written in different ways.\r\n      </p>\r\n\r\n      <p>Your task is to recognise each number and give an answer ASAP.</p>\r\n\r\n      <p>\r\n        You can use your ü†ê ü†í buttons for it or simply click on cards with\r\n        numbers.\r\n      </p>\r\n\r\n      <p>Are you ready? Then click play!</p>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        onClick={handleClick}\r\n      >\r\n        Play\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WelcomeTemplate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport \"./GameTemplate.css\";\r\n\r\nconst gameDataLevels1 = [\r\n  {\r\n    task: `üíõüíõüíõ`,\r\n    leftAnswer: `4`,\r\n    rightAnswer: `3`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `—á–µ—Ç—ã—Ä–µ`,\r\n    leftAnswer: `4`,\r\n    rightAnswer: `6`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üñ§üñ§üñ§üñ§üñ§üñ§üñ§`,\r\n    leftAnswer: `8`,\r\n    rightAnswer: `7`,\r\n    color: `dark`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–æ–¥–∏–Ω`,\r\n    leftAnswer: `1`,\r\n    rightAnswer: `2`,\r\n    color: `light`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `‚ô°‚ô°‚ô°‚ô°‚ô°`,\r\n    leftAnswer: `4`,\r\n    rightAnswer: `5`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–≤–æ—Å–µ–º—å`,\r\n    leftAnswer: `9`,\r\n    rightAnswer: `8`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§`,\r\n    leftAnswer: `8`,\r\n    rightAnswer: `9`,\r\n    color: `dark`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–ø—è—Ç—å`,\r\n    leftAnswer: `6`,\r\n    rightAnswer: `5`,\r\n    color: `light`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üíõüíõüíõüíõüíõüíõ`,\r\n    leftAnswer: `5`,\r\n    rightAnswer: `6`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–¥–≤–∞`,\r\n    leftAnswer: `2`,\r\n    rightAnswer: `1`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  }\r\n];\r\n\r\nconst gameDataLevels2 = [\r\n  {\r\n    task: `–ø—è—Ç—å`,\r\n    leftAnswer: `5`,\r\n    rightAnswer: `6`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üíõüíõüíõüíõüíõüíõ`,\r\n    leftAnswer: `7`,\r\n    rightAnswer: `6`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§`,\r\n    leftAnswer: `8`,\r\n    rightAnswer: `9`,\r\n    color: `dark`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–¥–≤–∞`,\r\n    leftAnswer: `1`,\r\n    rightAnswer: `2`,\r\n    color: `light`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `‚ô°‚ô°‚ô°‚ô°`,\r\n    leftAnswer: `4`,\r\n    rightAnswer: `5`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–≤–æ—Å–µ–º—å`,\r\n    leftAnswer: `9`,\r\n    rightAnswer: `8`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üñ§üñ§`,\r\n    leftAnswer: `3`,\r\n    rightAnswer: `2`,\r\n    color: `dark`,\r\n    type: `pictogram`\r\n  },\r\n\r\n  {\r\n    task: `–¥–≤–∞`,\r\n    leftAnswer: `2`,\r\n    rightAnswer: `1`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üíõüíõüíõüíõüíõüíõüíõ`,\r\n    leftAnswer: `7`,\r\n    rightAnswer: `6`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `—à–µ—Å—Ç—å`,\r\n    leftAnswer: `6`,\r\n    rightAnswer: `5`,\r\n    color: `light`,\r\n    type: `letters`\r\n  }\r\n];\r\n\r\nconst gameDataLevels = Math.floor(Math.random() * 2)\r\n  ? gameDataLevels1\r\n  : gameDataLevels2;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    margin: theme.spacing(2, 2),\r\n    card: {\r\n      minWidth: 300\r\n    }\r\n  }\r\n}));\r\n\r\n// custom hook\r\nconst useEvent = (event, handler, passive = false) => {\r\n  useEffect(() => {\r\n    // initiate the event handler\r\n    window.addEventListener(event, handler, passive);\r\n    // this will clean up the event every time the component is re-rendered\r\n    // componentDidUpdate, basically\r\n    return function cleanup() {\r\n      window.removeEventListener(event, handler);\r\n    };\r\n  });\r\n};\r\n\r\nlet timeSaver = [];\r\nconst screenSwitcher = (props, counter, setCounter) => {\r\n  const currentMs = new Date().getTime();\r\n  timeSaver.push(currentMs);\r\n  props.setResultArray(timeSaver);\r\n  if (counter < 9) {\r\n    setCounter(counter + 1); // function to change counter\r\n  } else {\r\n    props.setResultArray(timeSaver);\r\n    props.setScreen(`WavingGoodbye`);\r\n  }\r\n};\r\n\r\nconst GameTemplate = props => {\r\n  const classes = useStyles();\r\n  const [counter, setCounter] = useState(0);\r\n  useEffect(() => {\r\n    const startMs = new Date().getTime();\r\n    timeSaver.push(startMs);\r\n  }, []); // fired on a first load, so it's basically componentDidMount\r\n\r\n  useEvent(\"keydown\", event => {\r\n    if (event.keyCode === 37 || event.keyCode === 39) {\r\n      screenSwitcher(props, counter, setCounter);\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"contrastContainer\">\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          What does this expression mean?\r\n        </Typography>\r\n        <br />\r\n        <Typography\r\n          style={{\r\n            color: gameDataLevels[counter].color === `dark` ? `yellow` : `black`\r\n          }}\r\n          component=\"p\"\r\n        >\r\n          {gameDataLevels[counter].task}\r\n        </Typography>\r\n      </Paper>\r\n      <div className=\"container\">\r\n        <Card className={classes.card}>\r\n          <CardActionArea\r\n            onClick={() => screenSwitcher(props, counter, setCounter)}\r\n          >\r\n            <CardContent>\r\n              <Typography variant=\"h3\" component=\"h2\">\r\n                {gameDataLevels[counter].leftAnswer}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n\r\n        <Card className={classes.card}>\r\n          <CardActionArea\r\n            onClick={() => screenSwitcher(props, counter, setCounter)}\r\n          >\r\n            <CardContent>\r\n              <Typography variant=\"h3\" component=\"h2\">\r\n                {gameDataLevels[counter].rightAnswer}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameTemplate;\r\n","import React from \"react\";\r\nimport \"./ThankYou.css\";\r\n\r\nconst ThankYou = props => {\r\n  let finalResults = [];\r\n  for (let i = 0; i < props.resultArray.length - 1; i++) {\r\n    finalResults.push(props.resultArray[i + 1] - props.resultArray[i]);\r\n  }\r\n\r\n  const listData = finalResults.map(element => (\r\n    <li key={finalResults.indexOf(element) + 1}>\r\n      <p>\r\n        –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å {finalResults.indexOf(element) + 1}: {element} –º—Å\r\n      </p>\r\n    </li>\r\n  ));\r\n  return (\r\n    <div>\r\n      <p>Results</p>\r\n      <ul className=\"mainList\">{listData}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThankYou;\r\n","import React, { useState } from \"react\";\r\nimport WelcomeTemplate from \"./WelcomeTemplate/WelcomeTemplate\";\r\nimport GameTemplate from \"./GameTemplate/GameTemplate\";\r\nimport ThankYou from \"./ThankYou/ThankYou\";\r\n\r\nconst renderComponent = (\r\n  displayedScreen,\r\n  setScreen,\r\n  setResultArray,\r\n  resultArray\r\n) => {\r\n  switch (displayedScreen) {\r\n    case \"WelcomeScreen\":\r\n      return (\r\n        <WelcomeTemplate\r\n          displayedScreen={displayedScreen}\r\n          setScreen={setScreen}\r\n        />\r\n      );\r\n    case \"GameTemplate\":\r\n      return (\r\n        <GameTemplate\r\n          displayedScreen={displayedScreen}\r\n          setScreen={setScreen}\r\n          setResultArray={setResultArray}\r\n        />\r\n      );\r\n    case \"WavingGoodbye\":\r\n      return (\r\n        <ThankYou\r\n          displayedScreen={displayedScreen}\r\n          setScreen={setScreen}\r\n          resultArray={resultArray}\r\n        />\r\n      );\r\n    default:\r\n      return (\r\n        <ThankYou displayedScreen={displayedScreen} setScreen={setScreen} />\r\n      );\r\n  }\r\n};\r\n\r\nconst Driver = () => {\r\n  const [displayedScreen, setScreen] = useState(`WelcomeScreen`);\r\n  const [resultArray, setResultArray] = useState([]);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: `absolute`,\r\n        top: `30%`,\r\n        left: `10%`,\r\n        width: `80%`\r\n      }}\r\n    >\r\n      {renderComponent(displayedScreen, setScreen, setResultArray, resultArray)}\r\n    </div>\r\n  );\r\n};\r\nexport default Driver;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Driver from \"./components/Driver\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Driver />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}