{"version":3,"sources":["components/WelcomeTemplate.js","components/ContrastTemplate.js","components/ThankYou.js","components/Driver.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","input","display","WelcomeTemplate","props","classes","Fragment","Button","variant","className","onClick","setScreen","gameDataLevels","task","leftAnswer","rightAnswer","color","type","root","padding","card","minWidth","title","fontSize","pos","marginBottom","timeSaver","ContrastTemplate","useState","counter","setCounter","useEffect","startMs","Date","getTime","push","event","handler","passive","window","addEventListener","removeEventListener","useEvent","keyCode","currentMs","setResultArray","class","Paper","Typography","component","Card","CardContent","ThankYou","finalResults","i","resultArray","length","console","log","listData","map","element","key","indexOf","Driver","displayedScreen","style","position","top","left","width","renderComponent","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b3fee3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\nconst WelcomeTemplate = props => {\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    props.setScreen(`ContrastTemplate`); // function to change screen\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <p>Welcome to the game!</p>\r\n\r\n      <p>\r\n        You will see two sets of number sequences written in different ways.\r\n      </p>\r\n\r\n      <p>Your task is to recognise each number and give an answer ASAP.</p>\r\n\r\n      <p>Use your ü†ê ü†í buttons for it.</p>\r\n\r\n      <p>Are you ready? Then click play!</p>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        onClick={handleClick}\r\n      >\r\n        Play\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WelcomeTemplate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport \"./ContrastTemplate.css\";\r\n\r\nconst gameDataLevels = [\r\n  {\r\n    task: `üíõüíõüíõ`,\r\n    leftAnswer: `4`,\r\n    rightAnswer: `3`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `—á–µ—Ç—ã—Ä–µ`,\r\n    leftAnswer: `4`,\r\n    rightAnswer: `6`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üñ§üñ§üñ§üñ§üñ§üñ§üñ§`,\r\n    leftAnswer: `8`,\r\n    rightAnswer: `7`,\r\n    color: `dark`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–æ–¥–∏–Ω`,\r\n    leftAnswer: `1`,\r\n    rightAnswer: `2`,\r\n    color: `light`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `‚ô°‚ô°‚ô°‚ô°‚ô°`,\r\n    leftAnswer: `4`,\r\n    rightAnswer: `5`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–≤–æ—Å–µ–º—å`,\r\n    leftAnswer: `9`,\r\n    rightAnswer: `8`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§üñ§`,\r\n    leftAnswer: `8`,\r\n    rightAnswer: `9`,\r\n    color: `dark`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–ø—è—Ç—å`,\r\n    leftAnswer: `6`,\r\n    rightAnswer: `5`,\r\n    color: `light`,\r\n    type: `letters`\r\n  },\r\n  {\r\n    task: `üíõüíõüíõüíõüíõüíõ`,\r\n    leftAnswer: `5`,\r\n    rightAnswer: `6`,\r\n    color: `light`,\r\n    type: `pictogram`\r\n  },\r\n  {\r\n    task: `–¥–≤–∞`,\r\n    leftAnswer: `2`,\r\n    rightAnswer: `1`,\r\n    color: `dark`,\r\n    type: `letters`\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    margin: theme.spacing(2, 2),\r\n    card: {\r\n      minWidth: 300\r\n    },\r\n    title: {\r\n      fontSize: 14\r\n    },\r\n    pos: {\r\n      marginBottom: 12\r\n    }\r\n  }\r\n}));\r\n\r\n// custom hook\r\nconst useEvent = (event, handler, passive = false) => {\r\n  useEffect(() => {\r\n    // initiate the event handler\r\n    window.addEventListener(event, handler, passive);\r\n    // this will clean up the event every time the component is re-rendered\r\n    // componentDidUpdate, basically\r\n    return function cleanup() {\r\n      window.removeEventListener(event, handler);\r\n    };\r\n  });\r\n};\r\n\r\nlet timeSaver = [];\r\n\r\nconst ContrastTemplate = props => {\r\n  const classes = useStyles();\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const startMs = new Date().getTime();\r\n    timeSaver.push(startMs);\r\n  }, []); // fired on a first load, so it's basically componentDidMount\r\n\r\n  useEvent(\"keydown\", event => {\r\n    if (event.keyCode === 37 || event.keyCode === 39) {\r\n      const currentMs = new Date().getTime();\r\n      timeSaver.push(currentMs);\r\n      props.setResultArray(timeSaver);\r\n      if (counter < 9) {\r\n        setCounter(counter + 1); // function to change counter\r\n      } else {\r\n        props.setResultArray(timeSaver);\r\n        props.setScreen(`WavingGoodbye`);\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div class=\"contrastContainer\">\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          What does this expression mean?\r\n        </Typography>\r\n        <br />\r\n        <Typography component=\"p\">{gameDataLevels[counter].task}</Typography>\r\n      </Paper>\r\n      <div className=\"container\">\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h3\" component=\"h2\">\r\n              {gameDataLevels[counter].leftAnswer}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h3\" component=\"h2\">\r\n              {gameDataLevels[counter].rightAnswer}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContrastTemplate;\r\n","import React from \"react\";\r\n\r\nconst ThankYou = props => {\r\n  let finalResults = [];\r\n  for (let i = 0; i < props.resultArray.length - 1; i++) {\r\n    finalResults.push(props.resultArray[i + 1] - props.resultArray[i]);\r\n  }\r\n  console.log(finalResults);\r\n\r\n  const listData = finalResults.map(element => (\r\n    <li key={finalResults.indexOf(element) + 1}>\r\n      <p>\r\n        –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å {finalResults.indexOf(element) + 1}: {element} –º—Å\r\n      </p>\r\n    </li>\r\n  ));\r\n  return <ul>{listData}</ul>;\r\n};\r\n\r\nexport default ThankYou;\r\n","import React, { useState } from \"react\";\r\nimport WelcomeTemplate from \"./WelcomeTemplate\";\r\nimport ContrastTemplate from \"./ContrastTemplate\";\r\nimport ThankYou from \"./ThankYou\";\r\n\r\nconst renderComponent = (\r\n  displayedScreen,\r\n  setScreen,\r\n  setResultArray,\r\n  resultArray\r\n) => {\r\n  switch (displayedScreen) {\r\n    case \"WelcomeScreen\":\r\n      return (\r\n        <WelcomeTemplate\r\n          displayedScreen={displayedScreen}\r\n          setScreen={setScreen}\r\n        />\r\n      );\r\n    case \"ContrastTemplate\":\r\n      return (\r\n        <ContrastTemplate\r\n          displayedScreen={displayedScreen}\r\n          setScreen={setScreen}\r\n          setResultArray={setResultArray}\r\n        />\r\n      );\r\n    case \"WavingGoodbye\":\r\n      return (\r\n        <ThankYou\r\n          displayedScreen={displayedScreen}\r\n          setScreen={setScreen}\r\n          resultArray={resultArray}\r\n        />\r\n      );\r\n    default:\r\n      return (\r\n        <ThankYou displayedScreen={displayedScreen} setScreen={setScreen} />\r\n      );\r\n  }\r\n};\r\n\r\nconst Driver = () => {\r\n  const [displayedScreen, setScreen] = useState(`WelcomeScreen`);\r\n  const [resultArray, setResultArray] = useState([]);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: `absolute`,\r\n        top: `30%`,\r\n        left: `10%`,\r\n        width: `80%`\r\n      }}\r\n    >\r\n      {renderComponent(displayedScreen, setScreen, setResultArray, resultArray)}\r\n    </div>\r\n  );\r\n};\r\nexport default Driver;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Driver from \"./components/Driver\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Driver />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}